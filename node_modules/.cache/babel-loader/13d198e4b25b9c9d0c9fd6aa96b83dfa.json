{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Documents\\\\Programming\\\\React\\\\GitHub\\\\Proyects\\\\Ecoomerce\\\\1\\\\src\\\\components\\\\Slider.jsx\",\n    _s = $RefreshSig$();\n\nimport { ArrowLeftOutlined, ArrowRightOutlined } from \"@material-ui/icons\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { sliderItems } from \"../data\";\nimport { mobile } from \"../responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n width: 100%;\n height: 100vh;\n display: flex;\n //background-color: coral;\n position:relative;\n overflow: hidden;\n ${mobile({\n  display: \"none\"\n})}`;\n_c = Container;\nconst Arrow = styled.div`\n width: 50px;\n height: 50px;\n background-color: #f7f7f7;\n border-radius:50%;\n display: flex;\n align-items: center;\n justify-content: center;\n position:absolute;\n top: 0;\n bottom: 0;\n left: ${props => props.direction === \"left\" && \"10px\"};\n right: ${props => props.direction === \"right\" && \"10px\"};\n margin:auto;\n cursor:pointer;\n opacity: 0.7;\n z-index: 2;\n `;\n_c2 = Arrow;\nconst Wrapper = styled.div`\n height: 100%;\n display: flex;\n transition: all 1.5s ease;\n transform:translateX(${props => props.slideIndex * -100}vw);`;\n_c3 = Wrapper;\nconst Slide = styled.div`\n width: 100vw;\n height: 100vh;\n display: flex;\n align-items: center;\n background-color: #${props => props.bg};`;\n_c4 = Slide;\nconst ImgContainer = styled.div`\n height: 100%;\n flex:1;`;\n_c5 = ImgContainer;\nconst Image = styled.img`\n height:80%;\n `;\n_c6 = Image;\nconst InfoContainer = styled.div`\n flex:1;\n padding: 50px;`;\n_c7 = InfoContainer;\nconst Title = styled.h1`\n font-size: 70px;\n`;\n_c8 = Title;\nconst Desc = styled.p`\n margin: 50px 0px;\n font-size: 20px;\n font-weight: 500;\n letter-spacing: 3px;`;\n_c9 = Desc;\nconst Button = styled.button`\n padding: 10px;\n font-size: 20px;\n background-color: transparent;\n cursor: pointer;`;\n_c10 = Button;\nexport const Slider = () => {\n  _s();\n\n  const [slideIndex, setSlideIndex] = useState(0);\n\n  const handleClick = direction => {\n    if (direction === \"left\") {\n      setSlideIndex(slideIndex > 0 ? slideIndex - 1 : 2);\n    } else {\n      setSlideIndex(slideIndex < 2 ? slideIndex + 1 : 0);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Arrow, {\n      direction: \"left\",\n      onClick: () => handleClick(\"left\"),\n      children: /*#__PURE__*/_jsxDEV(ArrowLeftOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      slideIndex: slideIndex,\n      children: sliderItems.map(item => /*#__PURE__*/_jsxDEV(Slide, {\n        bg: item.bg,\n        children: [/*#__PURE__*/_jsxDEV(ImgContainer, {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: item.img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(InfoContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Desc, {\n            children: item.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: item.button\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Arrow, {\n      direction: \"right\",\n      onClick: () => handleClick(\"right\"),\n      children: /*#__PURE__*/_jsxDEV(ArrowRightOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Slider, \"0yB34WFJoKB17f3kT+wIMpxNoV8=\");\n\n_c11 = Slider;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Arrow\");\n$RefreshReg$(_c3, \"Wrapper\");\n$RefreshReg$(_c4, \"Slide\");\n$RefreshReg$(_c5, \"ImgContainer\");\n$RefreshReg$(_c6, \"Image\");\n$RefreshReg$(_c7, \"InfoContainer\");\n$RefreshReg$(_c8, \"Title\");\n$RefreshReg$(_c9, \"Desc\");\n$RefreshReg$(_c10, \"Button\");\n$RefreshReg$(_c11, \"Slider\");","map":{"version":3,"sources":["C:/Users/danie/Documents/Programming/React/GitHub/Proyects/Ecoomerce/1/src/components/Slider.jsx"],"names":["ArrowLeftOutlined","ArrowRightOutlined","useState","styled","sliderItems","mobile","Container","div","display","Arrow","props","direction","Wrapper","slideIndex","Slide","bg","ImgContainer","Image","img","InfoContainer","Title","h1","Desc","p","Button","button","Slider","setSlideIndex","handleClick","map","item","title","desc","id"],"mappings":"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","sourcesContent":["import { ArrowLeftOutlined, ArrowRightOutlined } from \"@material-ui/icons\"\r\nimport { useState } from \"react\";\r\nimport styled from \"styled-components\"\r\nimport { sliderItems } from \"../data\";\r\nimport { mobile } from \"../responsive\";\r\n\r\n\r\nconst Container = styled.div`\r\n width: 100%;\r\n height: 100vh;\r\n display: flex;\r\n //background-color: coral;\r\n position:relative;\r\n overflow: hidden;\r\n ${mobile({ display: \"none\"})}`\r\n\r\nconst Arrow = styled.div`\r\n width: 50px;\r\n height: 50px;\r\n background-color: #f7f7f7;\r\n border-radius:50%;\r\n display: flex;\r\n align-items: center;\r\n justify-content: center;\r\n position:absolute;\r\n top: 0;\r\n bottom: 0;\r\n left: ${props=> props.direction === \"left\" && \"10px\"};\r\n right: ${props=> props.direction === \"right\" && \"10px\"};\r\n margin:auto;\r\n cursor:pointer;\r\n opacity: 0.7;\r\n z-index: 2;\r\n `\r\nconst Wrapper = styled.div`\r\n height: 100%;\r\n display: flex;\r\n transition: all 1.5s ease;\r\n transform:translateX(${props=>props.slideIndex * -100}vw);`\r\n\r\nconst Slide = styled.div`\r\n width: 100vw;\r\n height: 100vh;\r\n display: flex;\r\n align-items: center;\r\n background-color: #${props=>props.bg};`\r\nconst ImgContainer = styled.div`\r\n height: 100%;\r\n flex:1;`\r\n\r\nconst Image = styled.img`\r\n height:80%;\r\n `\r\n\r\nconst InfoContainer = styled.div`\r\n flex:1;\r\n padding: 50px;`\r\n\r\nconst Title = styled.h1`\r\n font-size: 70px;\r\n`\r\nconst Desc = styled.p`\r\n margin: 50px 0px;\r\n font-size: 20px;\r\n font-weight: 500;\r\n letter-spacing: 3px;`\r\n\r\nconst Button = styled.button`\r\n padding: 10px;\r\n font-size: 20px;\r\n background-color: transparent;\r\n cursor: pointer;`\r\n\r\nexport const Slider = () => {\r\n\r\n    const [slideIndex, setSlideIndex] = useState(0);\r\n\r\n    const handleClick = (direction) => {\r\n        \r\n        if(direction ===\"left\"){\r\n            setSlideIndex(slideIndex > 0 ? slideIndex-1 : 2);\r\n        } else {\r\n            setSlideIndex(slideIndex < 2 ? slideIndex+1 : 0);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Arrow direction=\"left\" onClick={()=>handleClick(\"left\")}>\r\n                <ArrowLeftOutlined />\r\n            </Arrow>\r\n            <Wrapper slideIndex={slideIndex}>\r\n                {sliderItems.map((item) => (\r\n                    <Slide bg={item.bg} key={item.id}>\r\n                        <ImgContainer>\r\n                        <Image src={item.img} />\r\n                        </ImgContainer>\r\n                        <InfoContainer>\r\n                            <Title>{item.title}</Title>\r\n                            <Desc>\r\n                                {item.desc}\r\n                            </Desc>\r\n                            <Button>{item.button}</Button>\r\n                        </InfoContainer>\r\n                    </Slide>\r\n                ))}\r\n            </Wrapper>\r\n            <Arrow direction=\"right\" onClick={()=>handleClick(\"right\")}>\r\n                <ArrowRightOutlined />\r\n            </Arrow>\r\n        </Container>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}